(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'function' object has no attribute 'id'"
p3
sS'layer'
p4
S'/home/dhrumil/Downloads/web2py/applications/DGD/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\nPOST_PER_PAGE = 10\ndef get_category():\n    category_name=request.args(0)\n    category=db.category(name=category_name)\n    if not category:\n        session.flash = "Page not found"\n        redirect(URL(\'index\'))\n    return category\n\ndef index():\n    page = request.args(1,cast=int,default=0)\n    start = page*POST_PER_PAGE\n    stop = start + POST_PER_PAGE\n    posts = db(db.post).select(orderby=~db.post.created_on,limitby=(start,stop))\n    return locals()\n\n\ndef create_post():\n    category=get_category()\n    db.post.category.default = category.id\n    form = SQLFORM(db.post).process()\n    return locals()\n\ndef edit_post():\n    id = request.args(0,cast=int)\n    form = SQLFORM(db.category,id)\n    return locals()\n\ndef list_posts_by_datetime():\n    response.view = \'default/list_posts_by_votes.html\'\n    category = get_category()\n    page = request.args(1,cast=int,default=0)\n    start = page*POST_PER_PAGE\n    stop = start + POST_PER_PAGE\n    rows = db(db.post.category==category.id).select(orderby=~db.post.created_on,limitby=(start,stop))\n    return locals()\n\ndef list_posts_by_votes():\n    category=get_category()\n    page = request.args(1,cast=int,default=0)\n    start = page*POST_PER_PAGE\n    stop = start + POST_PER_PAGE\n    rows = db(db.post.category==category.id).select(orderby=~db.post.votes,limitby=(start,stop))\n    return locals()\n\ndef list_posts_by_author():\n    user_id = request.args(0,cast=int)\n    page = request.args(1,cast=int,default=0)\n    start = page*POST_PER_PAGE\n    stop = start + POST_PER_PAGE\n    rows = db(db.post.created_by==user.id).select(orderby=~db.post.created_on,limitby=(start,stop))\n    return locals()\n\ndef view_post():\n    id = request.args(0,cast=int)\n    post =db.post(id) or redirect(URL(\'index\'))\n    comments = db(db.comm.post==post.id).select(orderby=~db.comm.created_on)\n    return locals()\n\ndef vote_callback():\n    id = request.args(0,cast=int)\n    direc = request.args(1,cast=int)\n    return locals()\n\ndef comm_vote_callback():\n    id = request.args(0,cast=int)\n    direc = request.args(1,cast=int)\n    return locals()\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\nresponse._vars=response._caller(list_posts_by_author)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/dhrumil/Downloads/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/home/dhrumil/Downloads/web2py/applications/DGD/controllers/default.py", line 134, in <module>\n  File "/home/dhrumil/Downloads/web2py/gluon/globals.py", line 372, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/dhrumil/Downloads/web2py/applications/DGD/controllers/default.py", line 61, in list_posts_by_author\n    rows = db(db.post.created_by==user.id).select(orderby=~db.post.created_on,limitby=(start,stop))\nAttributeError: \'function\' object has no attribute \'id\'\n'
p11
s.